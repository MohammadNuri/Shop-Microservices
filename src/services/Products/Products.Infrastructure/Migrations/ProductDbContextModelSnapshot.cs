// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Products.Infrastructure;

#nullable disable

namespace Products.Infrastructure.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Products.Domain.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("BannerUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("https://placehold.co/500x100.png");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 5, 30, 20, 54, 42, 206, DateTimeKind.Utc).AddTicks(8184));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("https://placehold.co/85.png");

                    b.Property<DateTime>("ModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 5, 30, 20, 54, 42, 206, DateTimeKind.Utc).AddTicks(8487));

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Permalink")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("https://placehold.co/150.png");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mollit exercitation sit laborum id eiusmod eu ad. Qui magna adipisicing amet in magna voluptate id proident qui excepteur minim qui pariatur. Id labore laboris ullamco mollit do deserunt cillum nostrud aliquip consectetur exercitation. Labore aliqua in tempor et qui ullamco commodo ullamco non irure. Excepteur ut sunt in sint id voluptate laborum in ut anim veniam amet laboris tempor. Ex ex magna sunt culpa consectetur.\r\n",
                            ModificationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ParentCategoryId = 7,
                            Permalink = "Head-Moody",
                            Priority = 1,
                            Title = "Morrison Koch"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Culpa esse nulla ipsum dolor in proident irure elit. Sit sunt deserunt fugiat reprehenderit. Enim id eu tempor deserunt laboris deserunt magna. Excepteur aute velit ullamco proident dolore et qui. Sit ut nulla ipsum veniam commodo quis ipsum. Ad aliquip cupidatat pariatur Lorem reprehenderit proident nisi tempor amet aute reprehenderit ipsum excepteur. Eu nulla nostrud velit reprehenderit duis ad proident tempor occaecat quis esse id deserunt.\r\n",
                            ModificationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ParentCategoryId = 10,
                            Permalink = "Amie-Ramos",
                            Priority = 2,
                            Title = "Francisca Shields"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "In aute dolor adipisicing deserunt magna nisi exercitation ut velit reprehenderit est Lorem dolor. Ipsum ea id et ullamco exercitation non quis id Lorem elit culpa mollit laboris culpa. Incididunt minim ut est qui excepteur. Do voluptate officia nisi consectetur sit ullamco est sit commodo nulla laborum ex eu veniam. Proident ad est est ullamco consectetur cillum.\r\n",
                            ModificationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Permalink = "Mccullough-Gentry",
                            Priority = 1,
                            Title = "Erna Terrell"
                        },
                        new
                        {
                            Id = 4,
                            Active = false,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Qui laboris amet dolore cillum deserunt aliquip do aliqua in. Qui ut elit sit laborum amet ipsum. Deserunt proident voluptate occaecat irure sunt consequat amet cupidatat ullamco laborum consequat labore nisi. Nostrud eu eu consequat aliqua Lorem sint do amet qui dolore ut. Eiusmod occaecat excepteur sit et irure sunt officia anim dolor aute veniam quis incididunt. In cillum consectetur deserunt cillum commodo excepteur irure.\r\n",
                            ModificationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Permalink = "Kelli-Guzman",
                            Priority = 1,
                            Title = "Briana Maldonado"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Labore elit ipsum ut enim deserunt. Enim labore cillum laborum laboris in consequat cillum veniam est. Commodo adipisicing enim commodo dolor esse ullamco dolor esse voluptate pariatur esse commodo non ex. Nostrud nisi laboris elit ex tempor pariatur Lorem qui est eu ex.\r\n",
                            ModificationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Permalink = "Jeri-Buckner",
                            Priority = 2,
                            Title = "Copeland Holcomb"
                        },
                        new
                        {
                            Id = 6,
                            Active = false,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Magna officia quis consectetur aliqua enim dolor consectetur magna cillum. Enim est magna nostrud duis tempor sunt id Lorem. Eiusmod quis dolore occaecat et exercitation. Est magna fugiat dolore non non occaecat. Ex id laboris excepteur eu est consectetur deserunt minim aliqua veniam labore.\r\n",
                            ModificationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Permalink = "Francis-Curtis",
                            Priority = 1,
                            Title = "Elnora Kane"
                        },
                        new
                        {
                            Id = 7,
                            Active = false,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Anim deserunt eu occaecat sint nisi veniam qui fugiat aute. Commodo nisi nisi aliqua ullamco consequat. Excepteur dolore adipisicing mollit eu laborum cillum nisi. Esse voluptate quis amet dolore nisi voluptate nisi Lorem cillum magna officia. Nostrud irure nulla esse voluptate labore elit excepteur reprehenderit.\r\n",
                            ModificationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Permalink = "Tasha-Craft",
                            Priority = 1,
                            Title = "Smith Wagner"
                        },
                        new
                        {
                            Id = 8,
                            Active = false,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tempor excepteur qui laborum nulla consectetur. Nulla adipisicing ad incididunt voluptate. Excepteur deserunt dolor non ut aliquip. Et dolor reprehenderit tempor enim do. Culpa adipisicing non consequat cupidatat veniam proident esse et cupidatat amet ea.\r\n",
                            ModificationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ParentCategoryId = 9,
                            Permalink = "Janelle-Lane",
                            Priority = 2,
                            Title = "Olive James"
                        },
                        new
                        {
                            Id = 9,
                            Active = false,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Velit magna pariatur laborum est ea commodo in ut velit sunt cupidatat incididunt. Mollit et minim sint non labore in excepteur tempor sit. Laboris Lorem incididunt commodo laborum velit proident nulla veniam sunt. Mollit dolor veniam aliqua proident fugiat cillum tempor dolor. Dolore veniam incididunt nisi consectetur deserunt in labore Lorem deserunt.\r\n",
                            ModificationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ParentCategoryId = 3,
                            Permalink = "Elisa-Coleman",
                            Priority = 2,
                            Title = "Adriana Galloway"
                        },
                        new
                        {
                            Id = 10,
                            Active = false,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Irure consectetur et excepteur pariatur minim culpa. Enim quis officia reprehenderit veniam. Aliqua veniam laborum esse officia consectetur laboris aliqua occaecat fugiat mollit. Aute do pariatur irure do irure fugiat officia sunt amet dolor. Ad consequat quis qui sunt cupidatat laborum excepteur ullamco veniam qui culpa esse commodo sunt.\r\n",
                            ModificationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ParentCategoryId = 8,
                            Permalink = "Justine-Duffy",
                            Priority = 1,
                            Title = "Leslie Jacobs"
                        });
                });

            modelBuilder.Entity("Products.Domain.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CoverImageUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("https://placehold.co/150.png");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 5, 30, 20, 54, 42, 206, DateTimeKind.Utc).AddTicks(5705));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.Property<DateTime>("ModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 5, 30, 20, 54, 42, 206, DateTimeKind.Utc).AddTicks(6078));

                    b.Property<string>("Permalink")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Products.Domain.Categories.Category", b =>
                {
                    b.HasOne("Products.Domain.Categories.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Products.Domain.Products.Product", b =>
                {
                    b.HasOne("Products.Domain.Categories.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Products.Domain.Categories.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
